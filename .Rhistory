which(redundant)
rules.pruned <- rules.gen[!redundant]
return(rules.pruned)
}
sslc.subset <- data.frame(lapply(sslc.subset[1:7], nonNumericCharactersRemover),
sslc.subset[8:21])
# eliminate the unwanted rows
sslc.subset <- subset(sslc.subset, subset=(L1_MARKS <= 125 & L2_MARKS <= 100 & L3_MARKS <= 100 &
S1_MARKS <= 100 & S2_MARKS <= 100 & S3_MARKS <= 100 & TOTAL_MARKS <= 625))
# listwise deletion of missing
sslc.subset <- na.omit(sslc.subset)
# standardize variables
sslc.wr <- scale(sslc.subset[1:7])
# Determine number of clusters
wss <- (nrow(sslc.wr)-1) * sum(apply(sslc.wr,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(sslc.wr,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# K-Means Cluster Analysis
fit <- kmeans(sslc.wr, 3) # 4 cluster solution
# get cluster means
aggregate(sslc.wr, by=list(fit$cluster), FUN=mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
# class
# unique(sslc.subset$NRC_CLASS)
sslc.subset$NRC_CLASS <- sapply(sslc.subset$NRC_CLASS, as.character)
sslc.subset$NRC_CLASS[sslc.subset$NRC_CLASS == "D   "] <- "Distinction"
sslc.subset$NRC_CLASS[sslc.subset$NRC_CLASS == "1"] <- "First"
sslc.subset$NRC_CLASS[sslc.subset$NRC_CLASS == "2"] <- "Second"
sslc.subset$NRC_CLASS[sslc.subset$NRC_CLASS == "PASS"] <- "Pass"
sslc.subset$NRC_CLASS[sslc.subset$NRC_CLASS == "FAIL"] <- "Fail"
sslc.subset$NRC_CLASS <- as.factor(sslc.subset$NRC_CLASS)
# school type
# unique(sslc.subset$SCHOOL_TYPE)
sslc.subset$SCHOOL_TYPE <- sapply(sslc.subset$SCHOOL_TYPE, as.character)
sslc.subset$SCHOOL_TYPE[sslc.subset$SCHOOL_TYPE == "U"] <- "Unaided"
sslc.subset$SCHOOL_TYPE[sslc.subset$SCHOOL_TYPE == "A"] <- "Aided"
sslc.subset$SCHOOL_TYPE[sslc.subset$SCHOOL_TYPE == "G"] <- "Government"
sslc.subset$SCHOOL_TYPE <- as.factor(sslc.subset$SCHOOL_TYPE)
# urban rural
# unique(sslc.subset$URBAN_RURAL)
sslc.subset$URBAN_RURAL <- sapply(sslc.subset$URBAN_RURAL, as.character)
sslc.subset$URBAN_RURAL[sslc.subset$URBAN_RURAL == "U"] <- "Urban"
sslc.subset$URBAN_RURAL[sslc.subset$URBAN_RURAL == "R"] <- "Rural"
sslc.subset$URBAN_RURAL <- as.factor(sslc.subset$URBAN_RURAL)
# caste codes
# unique(sslc.subset$NRC_CASTE_CODE)
sslc.subset$NRC_CASTE_CODE[sslc.subset$NRC_CASTE_CODE == 1] <- "SC"
sslc.subset$NRC_CASTE_CODE[sslc.subset$NRC_CASTE_CODE == 2] <- "ST"
sslc.subset$NRC_CASTE_CODE[sslc.subset$NRC_CASTE_CODE == 3] <- "Category 1"
sslc.subset$NRC_CASTE_CODE[sslc.subset$NRC_CASTE_CODE == 4] <- "General"
sslc.subset$NRC_CASTE_CODE <- as.factor(sslc.subset$NRC_CASTE_CODE)
# gender type
# unique(sslc.subset$NRC_GENDER_CODE)
sslc.subset$NRC_GENDER_CODE <- sapply(sslc.subset$NRC_GENDER_CODE, as.character)
sslc.subset$NRC_GENDER_CODE[sslc.subset$NRC_GENDER_CODE == "B"] <- "Boy"
sslc.subset$NRC_GENDER_CODE[sslc.subset$NRC_GENDER_CODE == "G"] <- "Girl"
sslc.subset$NRC_GENDER_CODE <- as.factor(sslc.subset$NRC_GENDER_CODE)
# medium
# unique(sslc.subset$NRC_MEDIUM)
sslc.subset$NRC_MEDIUM <- sapply(sslc.subset$NRC_MEDIUM, as.character)
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "E"] <- "English"
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "K"] <- "Kannada"
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "L"] <- "Telegu"
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "T"] <- "Tamil"
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "U"] <- "Urdu"
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "H"] <- "Hindi"
sslc.subset$NRC_MEDIUM[sslc.subset$NRC_MEDIUM == "M"] <- "Marathi"
sslc.subset$NRC_MEDIUM <- as.factor(sslc.subset$NRC_MEDIUM)
# physical condition
# unique(sslc.subset$NRC_PHYSICAL_CONDITION)
sslc.subset$NRC_PHYSICAL_CONDITION <- sapply(sslc.subset$NRC_PHYSICAL_CONDITION, as.character)
sslc.subset$NRC_PHYSICAL_CONDITION[sslc.subset$NRC_PHYSICAL_CONDITION == "N"] <- "Normal"
sslc.subset$NRC_PHYSICAL_CONDITION[sslc.subset$NRC_PHYSICAL_CONDITION == "B"] <- "Blind"
sslc.subset$NRC_PHYSICAL_CONDITION[sslc.subset$NRC_PHYSICAL_CONDITION == "D"] <- "Dumb"
sslc.subset$NRC_PHYSICAL_CONDITION[sslc.subset$NRC_PHYSICAL_CONDITION == "H"] <- "Hearing impaired"
sslc.subset$NRC_PHYSICAL_CONDITION[sslc.subset$NRC_PHYSICAL_CONDITION == "P"] <- "Physically handicapped"
sslc.subset$NRC_PHYSICAL_CONDITION[sslc.subset$NRC_PHYSICAL_CONDITION == "S"] <- "Spastic / dyslexia"
sslc.subset$NRC_PHYSICAL_CONDITION <- as.factor(sslc.subset$NRC_PHYSICAL_CONDITION)
# candidate type
# unique(sslc.subset$CANDIDATE_TYPE)
sslc.subset$CANDIDATE_TYPE <- sapply(sslc.subset$CANDIDATE_TYPE, as.character)
sslc.subset$CANDIDATE_TYPE[sslc.subset$CANDIDATE_TYPE == "RF"] <- "Regular Fresher"
sslc.subset$CANDIDATE_TYPE[sslc.subset$CANDIDATE_TYPE == "PF"] <- "Private Fresher"
sslc.subset$CANDIDATE_TYPE <- as.factor(sslc.subset$CANDIDATE_TYPE)
# l1
# unique(sslc.subset$L1_RESULT)
sslc.subset$L1_RESULT <- sapply(sslc.subset$L1_RESULT, as.character)
sslc.subset$L1_RESULT[sslc.subset$L1_RESULT == "A"] <- "Absent"
sslc.subset$L1_RESULT[sslc.subset$L1_RESULT == "F"] <- "Fail"
sslc.subset$L1_RESULT[sslc.subset$L1_RESULT == "P"] <- "Pass"
sslc.subset$L1_RESULT <- as.factor(sslc.subset$L1_RESULT)
# l2
# unique(sslc.subset$L2_RESULT)
sslc.subset$L2_RESULT <- sapply(sslc.subset$L2_RESULT, as.character)
sslc.subset$L2_RESULT[sslc.subset$L2_RESULT == "A"] <- "Absent"
sslc.subset$L2_RESULT[sslc.subset$L2_RESULT == "F"] <- "Fail"
sslc.subset$L2_RESULT[sslc.subset$L2_RESULT == "P"] <- "Pass"
sslc.subset$L2_RESULT <- as.factor(sslc.subset$L2_RESULT)
# l3
# unique(sslc.subset$L3_RESULT)
sslc.subset$L3_RESULT <- sapply(sslc.subset$L3_RESULT, as.character)
sslc.subset$L3_RESULT[sslc.subset$L3_RESULT == "A"] <- "Absent"
sslc.subset$L3_RESULT[sslc.subset$L3_RESULT == "F"] <- "Fail"
sslc.subset$L3_RESULT[sslc.subset$L3_RESULT == "P"] <- "Pass"
sslc.subset$L3_RESULT <- as.factor(sslc.subset$L3_RESULT)
# s1
# unique(sslc.subset$S1_RESULT)
sslc.subset$S1_RESULT <- sapply(sslc.subset$S1_RESULT, as.character)
sslc.subset$S1_RESULT[sslc.subset$S1_RESULT == "A"] <- "Absent"
sslc.subset$S1_RESULT[sslc.subset$S1_RESULT == "F"] <- "Fail"
sslc.subset$S1_RESULT[sslc.subset$S1_RESULT == "P"] <- "Pass"
sslc.subset$S1_RESULT <- as.factor(sslc.subset$S1_RESULT)
# s2
# unique(sslc.subset$S2_RESULT)
sslc.subset$S2_RESULT <- sapply(sslc.subset$S2_RESULT, as.character)
sslc.subset$S2_RESULT[sslc.subset$S2_RESULT == "A"] <- "Absent"
sslc.subset$S2_RESULT[sslc.subset$S2_RESULT == "F"] <- "Fail"
sslc.subset$S2_RESULT[sslc.subset$S2_RESULT == "P"] <- "Pass"
sslc.subset$S2_RESULT <- as.factor(sslc.subset$S2_RESULT)
# s3
# unique(sslc.subset$S3_RESULT)
sslc.subset$S3_RESULT <- sapply(sslc.subset$S3_RESULT, as.character)
sslc.subset$S3_RESULT[sslc.subset$S3_RESULT == "A"] <- "Absent"
sslc.subset$S3_RESULT[sslc.subset$S3_RESULT == "F"] <- "Fail"
sslc.subset$S3_RESULT[sslc.subset$S3_RESULT == "P"] <- "Pass"
sslc.subset$S3_RESULT <- as.factor(sslc.subset$S3_RESULT)
sslc.cluster1 <- subset(sslc.subset, subset = (fit.cluster == 1))
sslc.cluster1 <- sslc.cluster1[-c(1, 2, 3, 4, 5, 6, 7, 22)]
sslc.cluster2 <- subset(sslc.subset, subset = (fit.cluster == 2))
sslc.cluster2 <- sslc.cluster2[-c(1, 2, 3, 4, 5, 6, 7, 22)]
sslc.cluster3 <- subset(sslc.subset, subset = (fit.cluster == 3))
sslc.cluster3 <- sslc.cluster3[-c(1, 2, 3, 4, 5, 6, 7, 22)]
library(arules)
rules <- apriori(sslc.cluster1,
parameter = list(conf = 0.99, sup = 0.9))
rules.sorted <- sort(rules, by = "lift")
inspect(rules.sorted)
rules <- apriori(sslc.cluster1,
parameter = list(conf = 0.005, sup = 0.9))
rules <- apriori(sslc.cluster1,
parameter = list(conf = 0.99, sup = 0.005))
rules <- apriori(sslc.cluster1,
parameter = list(conf = 0.99, sup = 0.9999))
rules.sorted <- sort(rules, by = "lift")
inspect(rules.sorted)
rules <- apriori(sslc.cluster1,
parameter = list(conf = 0.999999))
table(fit$cluster , sslc.subset$NRC_CLASS)
table(fit$cluster , sslc.subset$URBAN_RURAL)
table(fit$cluster , sslc.subset$NRC_GENDER_CODE)
table(fit$cluster , sslc.subset$NRC_MEDIUM)
table(fit$cluster , sslc.subset$SCHOOL_TYPE)
library(arules)
# read the csv
sslc <- read.csv("data/Group4Data.csv")
# select the 8 columns that we are interested in
sslc.subset <- subset(sslc,
select=c("NRC_CLASS", "SCHOOL_TYPE", "URBAN_RURAL", "NRC_CASTE_CODE", "NRC_GENDER_CODE",
"NRC_MEDIUM", "NRC_PHYSICAL_CONDITION", "CANDIDATE_TYPE",
"L1_RESULT", "L2_RESULT", "L3_RESULT",
"S1_RESULT", "S2_RESULT", "S3_RESULT"))
# prune
prune <- function(rules.gen) {
subset.matrix <- is.subset(rules.gen, rules.gen)
subset.matrix[lower.tri(subset.matrix, diag = T)] <- NA
redundant <- colSums(subset.matrix, na.rm = T) >= 1
which(redundant)
rules.pruned <- rules.gen[!redundant]
return(rules.pruned)
}
source("factoriser.R")
source("experiments/factoriser.R")
View(sslc.subset)
source("experiments/utils.R")
sslc <- read.csv("data/Group4Data.csv")
# select the 21 columns that we are interested in
sslc.subset <- subset(sslc,
select=c("L1_MARKS", "L2_MARKS", "L3_MARKS",
"S1_MARKS", "S2_MARKS", "S3_MARKS", "TOTAL_MARKS",
"NRC_CLASS", "SCHOOL_TYPE", "URBAN_RURAL", "NRC_CASTE_CODE", "NRC_GENDER_CODE",
"NRC_MEDIUM", "NRC_PHYSICAL_CONDITION", "CANDIDATE_TYPE",
"L1_RESULT", "L2_RESULT", "L3_RESULT",
"S1_RESULT", "S2_RESULT", "S3_RESULT"))
source("experiments/utils.R")
source("experiments/factoriser.R")
sslc.subset <- data.frame(lapply(sslc.subset[1:7], nonNumericCharactersRemover),
sslc.subset[8:21])
# eliminate the unwanted rows
sslc.subset <- subset(sslc.subset, subset=(L1_MARKS <= 125 & L2_MARKS <= 100 & L3_MARKS <= 100 &
S1_MARKS <= 100 & S2_MARKS <= 100 & S3_MARKS <= 100 & TOTAL_MARKS <= 625))
sslc.subset <- na.omit(sslc.subset)
sslc.wr <- scale(sslc.subset[1:7])
wss <- (nrow(sslc.wr)-1) * sum(apply(sslc.wr,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.wr,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(sslc.wr, 3) # 4 cluster solution
# get cluster means
aggregate(sslc.wr, by=list(fit$cluster), FUN=mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
# Analyse Class in each cluster
table(fit$cluster , sslc.subset$NRC_CLASS)
fit <- kmeans(sslc.wr, 5) # 4 cluster solution
aggregate(sslc.wr, by=list(fit$cluster), FUN=mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
# Analyse Class in each cluster
table(fit$cluster , sslc.subset$NRC_CLASS)
# Analyse Urban/Rural in each cluster
table(fit$cluster , sslc.subset$URBAN_RURAL)
# Analyse Gender in each cluster
table(fit$cluster , sslc.subset$NRC_GENDER_CODE)
# Analyse Medium in each cluster
table(fit$cluster , sslc.subset$NRC_MEDIUM)
# Analyse School type in each cluster
table(fit$cluster , sslc.subset$SCHOOL_TYPE)
fit <- kmeans(sslc.wr, 2) # 4 cluster solution
# get cluster means
aggregate(sslc.wr, by=list(fit$cluster), FUN=mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
# Analyse Class in each cluster
table(fit$cluster , sslc.subset$NRC_CLASS)
table(fit$cluster , sslc.subset$URBAN_RURAL)
table(fit$cluster , sslc.subset$NRC_GENDER_CODE)
# Analyse Medium in each cluster
table(fit$cluster , sslc.subset$NRC_MEDIUM)
cluster_data <- data[fit$cluster == 1,]
cluster_data <- sslc.subset[fit$cluster == 1,]
histogram(~cluster_data$L1_MARKS | cluster_data$URBAN_RURAL)
library(lattice)
histogram(~cluster_data$L1_MARKS | cluster_data$URBAN_RURAL)
histogram(~cluster_data$L1_MARKS | cluster_data$NRC_MEDIUM)
cluster_data <- sslc.subset[fit$cluster == 1,]
histogram(~cluster_data$TOTAL_MARKS | cluster_data$URBAN_RURAL)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$NRC_MEDIUM)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$SCHOOL_TYPE)
cluster_data <- sslc.subset[fit$cluster == 2,]
histogram(~cluster_data$TOTAL_MARKS | cluster_data$URBAN_RURAL)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$NRC_MEDIUM)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$SCHOOL_TYPE)
cluster_data <- sslc.subset[fit$cluster == 3,]
histogram(~cluster_data$TOTAL_MARKS | cluster_data$URBAN_RURAL)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$NRC_MEDIUM)
cluster_data <- sslc.subset[fit$cluster == 0,]
histogram(~cluster_data$TOTAL_MARKS | cluster_data$URBAN_RURAL)
cluster_data <- sslc.subset[fit$cluster == 3,]
histogram(~cluster_data$TOTAL_MARKS | cluster_data$URBAN_RURAL)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$NRC_MEDIUM)
histogram(~cluster_data$TOTAL_MARKS | cluster_data$SCHOOL_TYPE)
fit <- kmeans(sslc.wr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.wr, by=list(fit$cluster), FUN=mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
# Analyse Class in each cluster
table(fit$cluster , sslc.subset$NRC_CLASS)
sslc.msubset = <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Boy"))
sslc.msubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Boy"))
View(sslc.msubset)
sslc.fsubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Girl"))
sslc.mwr <- scale(sslc.msubset[1:7])
wss <- (nrow(sslc.mwr)-1) * sum(apply(sslc.mwr,2,var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.mwr,
centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(sslc.mwr, 3) # 3 cluster solution
aggregate(sslc.mwr, by=list(fit$cluster), FUN=mean)
sslc.msubset <- data.frame(sslc.msubset, fit$cluster)
table(fit$cluster , sslc.msubset$NRC_CLASS)
table(fit$cluster , sslc.subset$NRC_CLASS)
fit <- kmeans(sslc.wr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.wr, by=list(fit$cluster), FUN=mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
# Analyse Class in each cluster
table(fit$cluster , sslc.subset$NRC_CLASS)
mfit <- kmeans(sslc.mwr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.mwr, by=list(mfit$cluster), FUN=mean)
# append cluster assignment
sslc.msubset <- data.frame(sslc.msubset, mfit$cluster)
# Analyse Class in each cluster
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(fit$cluster , sslc.subset$NRC_CLASS)
sslc.fwr <- scale(sslc.fsubset[1:7])
# Determine number of clusters
wss <- (nrow(sslc.fwr)-1) * sum(apply(sslc.fwr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.fwr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
# K-Means Cluster Analysis on male data
ffit <- kmeans(sslc.fwr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.fwr, by = list(ffit$cluster), FUN = mean)
# append cluster assignment
sslc.fsubset <- data.frame(sslc.fsubset, ffit$cluster)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$SCHOOL_TYPE)
table(mfit$cluster , sslc.msubset$SCHOOL_TYPE)
table(fit$cluster , sslc.subset$SCHOOL_TYPE)
table(fit$cluster , sslc.subset$NRC_CLASS)
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
sslc <- read.csv("data/Group4Data.csv")
# select the 21 columns that we are interested in
sslc.subset <- subset(sslc,
select=c("L1_MARKS", "L2_MARKS", "L3_MARKS",
"S1_MARKS", "S2_MARKS", "S3_MARKS", "TOTAL_MARKS",
"NRC_CLASS", "SCHOOL_TYPE", "URBAN_RURAL", "NRC_CASTE_CODE", "NRC_GENDER_CODE",
"NRC_MEDIUM", "NRC_PHYSICAL_CONDITION", "CANDIDATE_TYPE",
"L1_RESULT", "L2_RESULT", "L3_RESULT",
"S1_RESULT", "S2_RESULT", "S3_RESULT"))
source("experiments/utils.R")
source("experiments/factoriser.R")
sslc.subset <- data.frame(lapply(sslc.subset[1:7], nonNumericCharactersRemover),
sslc.subset[8:21])
# eliminate the unwanted rows
sslc.subset <- subset(sslc.subset, subset=(L1_MARKS <= 125 & L2_MARKS <= 100 & L3_MARKS <= 100 &
S1_MARKS <= 100 & S2_MARKS <= 100 & S3_MARKS <= 100 & TOTAL_MARKS <= 625))
# listwise deletion of missing
sslc.subset <- na.omit(sslc.subset)
sslc.msubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Boy"))
sslc.fsubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Girl"))
sslc.wr <- sslc.subset
View(sslc.wr)
sslc.wr$L1_MARKS <- (sslc.wr$L1_MARKS * 100) / 125
View(sslc.wr)
sslc.wr <- sslc.subset[1:6]
View(sslc.wr)
sslc.wr$L1_MARKS <- (sslc.wr$L1_MARKS * 100) / 125
View(sslc.wr)
wss <- (nrow(sslc.wr)-1) * sum(apply(sslc.wr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.wr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
# K-Means Cluster Analysis on whole data
fit <- kmeans(sslc.wr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
sslc.mwr <- sslc.msubset[1:6]
sslc.mwr$L1_MARKS <- (sslc.mwr$L1_MARKS * 100) / 125
wss <- (nrow(sslc.mwr)-1) * sum(apply(sslc.mwr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.mwr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
# K-Means Cluster Analysis on male data
mfit <- kmeans(sslc.mwr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.mwr, by = list(mfit$cluster), FUN = mean)
# append cluster assignment
sslc.msubset <- data.frame(sslc.msubset, mfit$cluster)
sslc.fwr <- sslc.fsubset[1:6]
sslc.fwr$L1_MARKS <- (sslc.fwr$L1_MARKS * 100) / 125
# Determine number of clusters
wss <- (nrow(sslc.fwr)-1) * sum(apply(sslc.fwr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.fwr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
# K-Means Cluster Analysis on male data
ffit <- kmeans(sslc.fwr, 3) # 3 cluster solution
# get cluster means
aggregate(sslc.fwr, by = list(ffit$cluster), FUN = mean)
sslc.fsubset <- data.frame(sslc.fsubset, ffit$cluster)
table(fit$cluster , sslc.subset$NRC_CLASS)
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
sslc.subset <- na.omit(sslc.subset)
sslc.subset$L1_MARKS <- (sslc.subset$L1_MARKS * 100) / 125
View(sslc.subset)
sslc.msubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Boy"))
sslc.fsubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Girl"))
View(sslc.msubset)
sslc.wr <- sslc.subset[1:6]
# Determine number of clusters
wss <- (nrow(sslc.wr)-1) * sum(apply(sslc.wr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.wr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
fit <- kmeans(sslc.wr, 4) # 3 cluster solution
# get cluster means
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
table(fit$cluster , sslc.subset$NRC_CLASS)
sslc.mwr <- sslc.msubset[1:6]
# Determine number of clusters
wss <- (nrow(sslc.mwr)-1) * sum(apply(sslc.mwr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.mwr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
mfit <- kmeans(sslc.mwr, 4) # 4 cluster solution
aggregate(sslc.mwr, by = list(mfit$cluster), FUN = mean)
sslc.msubset <- data.frame(sslc.msubset, mfit$cluster)
sslc.fwr <- sslc.fsubset[1:6]
# Determine number of clusters
wss <- (nrow(sslc.fwr)-1) * sum(apply(sslc.fwr, 2, var))
for (i in 2:10) wss[i] <- sum(kmeans(sslc.fwr,
centers = i)$withinss)
plot(1:10, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
# K-Means Cluster Analysis on female data
ffit <- kmeans(sslc.fwr, 4) # 4 cluster solution
# get cluster means
aggregate(sslc.fwr, by = list(ffit$cluster), FUN = mean)
# append cluster assignment
sslc.fsubset <- data.frame(sslc.fsubset, ffit$cluster)
###########################################################
table(fit$cluster , sslc.subset$NRC_CLASS)
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
fit <- kmeans(sslc.wr, 5) # 5 cluster solution
# get cluster means
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
mfit <- kmeans(sslc.mwr, 5) # 5 cluster solution
# get cluster means
aggregate(sslc.mwr, by = list(mfit$cluster), FUN = mean)
# append cluster assignment
sslc.msubset <- data.frame(sslc.msubset, mfit$cluster)
ffit <- kmeans(sslc.fwr, 5) # 5 cluster solution
# get cluster means
aggregate(sslc.fwr, by = list(ffit$cluster), FUN = mean)
# append cluster assignment
sslc.fsubset <- data.frame(sslc.fsubset, ffit$cluster)
table(fit$cluster , sslc.subset$NRC_CLASS)
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
sslc.subset <- data.frame(sslc.subset, fit$cluster)
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
table(fit$cluster , sslc.subset$NRC_CLASS)
sslc <- read.csv("data/Group4Data.csv")
# select the 21 columns that we are interested in
sslc.subset <- subset(sslc,
select=c("L1_MARKS", "L2_MARKS", "L3_MARKS",
"S1_MARKS", "S2_MARKS", "S3_MARKS", "TOTAL_MARKS",
"NRC_CLASS", "SCHOOL_TYPE", "URBAN_RURAL", "NRC_CASTE_CODE", "NRC_GENDER_CODE",
"NRC_MEDIUM", "NRC_PHYSICAL_CONDITION", "CANDIDATE_TYPE",
"L1_RESULT", "L2_RESULT", "L3_RESULT",
"S1_RESULT", "S2_RESULT", "S3_RESULT"))
source("experiments/utils.R")
source("experiments/factoriser.R")
sslc.subset <- data.frame(lapply(sslc.subset[1:7], nonNumericCharactersRemover),
sslc.subset[8:21])
# eliminate the unwanted rows
sslc.subset <- subset(sslc.subset, subset=(L1_MARKS <= 125 & L2_MARKS <= 100 & L3_MARKS <= 100 &
S1_MARKS <= 100 & S2_MARKS <= 100 & S3_MARKS <= 100 & TOTAL_MARKS <= 625))
sslc.subset <- na.omit(sslc.subset)
sslc.subset$L1_MARKS <- (sslc.subset$L1_MARKS * 100) / 125
sslc.msubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Boy"))
sslc.fsubset <- subset(sslc.subset, subset = (NRC_GENDER_CODE=="Girl"))
sslc.wr <- sslc.subset[1:6]
# Determine number of clusters
fit <- kmeans(sslc.wr, 5) # 5 cluster solution
# get cluster means
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
# append cluster assignment
sslc.subset <- data.frame(sslc.subset, fit$cluster)
sslc.mwr <- sslc.msubset[1:6]
mfit <- kmeans(sslc.mwr, 5) # 5 cluster solution
# get cluster means
aggregate(sslc.mwr, by = list(mfit$cluster), FUN = mean)
# append cluster assignment
sslc.msubset <- data.frame(sslc.msubset, mfit$cluster)
sslc.fwr <- sslc.fsubset[1:6]
ffit <- kmeans(sslc.fwr, 5) # 5 cluster solution
# get cluster means
aggregate(sslc.fwr, by = list(ffit$cluster), FUN = mean)
sslc.fsubset <- data.frame(sslc.fsubset, ffit$cluster)
table(fit$cluster , sslc.subset$NRC_CLASS)
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
table(fit$cluster , sslc.subset$URBAN_RURAL)
table(mfit$cluster , sslc.msubset$URBAN_RURAL)
table(ffit$cluster , sslc.fsubset$URBAN_RURAL)
table(fit$cluster , sslc.subset$NRC_MEDIUM)
table(mfit$cluster , sslc.msubset$NRC_MEDIUM)
table(ffit$cluster , sslc.fsubset$NRC_MEDIUM)
# Analyse School type in each cluster
table(fit$cluster , sslc.subset$SCHOOL_TYPE)
table(mfit$cluster , sslc.msubset$SCHOOL_TYPE)
table(ffit$cluster , sslc.fsubset$SCHOOL_TYPE)
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
aggregate(sslc.wr, by = list(fit$cluster), FUN = sd)
aggregate(sslc.wr, by = list(fit$cluster), FUN = var)
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
aggregate(sslc.wr, by = list(fit$cluster), FUN = mean)
aggregate(sslc.mwr, by = list(mfit$cluster), FUN = mean)
aggregate(sslc.fwr, by = list(ffit$cluster), FUN = mean)
table(fit$cluster , sslc.subset$NRC_CLASS)
table(mfit$cluster , sslc.msubset$NRC_CLASS)
table(ffit$cluster , sslc.fsubset$NRC_CLASS)
