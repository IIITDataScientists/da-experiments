pwd
help
graph
graphs
x <- 911
print(x)
x <- 911L
print(x)
x.class
x
x <- 2:12
x
x <- c(.5, 0.6)
x
x <- c(5L, 0.6)
x
x <- a:f
x <- vector("string", 10)
x <- vector("integer", 10)
x
x <- vector("numeric", 10)
x
y <- c(1.7, "a")
y
y <- c(1.7, TRUE)
y
x <- 0:6
asLogical(x)
as.logical(x)
z <- as.logical(x)
z
z <- as.complex(x)
z
m <- matrix(nrow = 2, ncol = 4)
m
attributes(x)
attributes(m)
m <- matrix(2, 4, 5, 6, 7, 8, 9, 0, nrow = 2, ncol = 4)
m <- matrix(2, 4, 5, nrow = 2, ncol = 4)
m <- matrix(z, nrow = 2, ncol = 4)
z <- 0:8
m <- matrix(z, nrow = 2, ncol = 4)
z <- 0:7
m <- matrix(z, nrow = 2, ncol = 4)
m
dim(z) <- c(2,4)
z
x <- 2:12
y <- 5:15
z <- cbind(x, y)
z
z <- rbind(x, y)
z
z <- list(5L, "Lol", TRUE, 9.11)
z
z[1]
z[[1]]
z[[[1]]
z[[[1]]]
z[[1]]
x <- factor(c(2, 3, 2, 4, 2, 2))
x
table(x)
unclass(x)
x <- factor(c(2, 3, 2, 4, 2, 2), levels =  c(2, 3, 4))
x
x <- factor(c(2, 3, 2, 4, 2, 2), levels =  c(2, 3))
x
table(x)
x <- factor(c(2, 3, 2, 4, 2, 2), levels =  c(4, 2, 3))
unclass(x)
x <- data.frame(foo = 1:4, bar = (T, T, F, F))
x <- data.frame(foo = 1:4, bar = (TRUE, TRUE, FALSE, FALSE))
x <- data.frame(foo = 1:4, bar = c(TRUE, TRUE, FALSE, FALSE))
x
read.csv()
pwd
Andhra.Pradesh...Adilabad <- read.csv("~/program/GeneralElections2014Analysis/DataCollection/Andhra Pradesh - Adilabad.csv")
View(Andhra.Pradesh...Adilabad)
View(Andhra.Pradesh...Adilabad)
View(Andhra.Pradesh...Adilabad)
View(Andhra.Pradesh...Adilabad)
blrsouth <- read.csv("~/program/GeneralElections2014Analysis/DataCollection/Karnataka - Bangalore South.csv")
View(blrsouth)
names(blrsouth)
names(blrsouth) <- (1, 2, 3)
names(blrsouth) <- c(1, 2, 3)
blrsouth
clear
clear()
View(blrsouth)
blrsouth[1]
blrsouth[[1]
;
blrsouth[[1]]
blrsouth[1][3]
blrsouth[1][1]
blrsouth[1][2]
blrsouth[1:2]
blrsouth[1,2]
blrsouth[1,3]
blrsouth[2,3]
blrsouth[1,4]
blrsouth[1,1]
blrsouth[5,1]
levels(blrsouth)
blrsouth[5, , ]
blrsouth[5, , drop = FALSE]
blrsouth
blrsouth[5, , drop = FALSE]
m <- blrsouth[5, , drop = FALSE]
m
m[1,]
m[1]
x <- list(a = 1:2, b = 2:5)
x
x[1]
x[[1]]
x$foo
x$a
x$b
x[c(1, 2)]
View(blrsouth)
winner <- complete.cases(blrsouth)
winner
blrsouth[winner, ]
blrsouth[winner, ][1:5, ]
blrsouth[1:5, ]
blrsouth[1:5, ][winner, ]
blrsouth[1:5, ]
write.table(blrsouth)
write.csv(blrsouth)
classes <- sapply(blrsouth, class)
classes
dput(blrsouth)
dput(blrsouth, file = "a.R")
write.csv(blrsouth, file = "a.csv")
rm(classes)
rm(x, y, z)
write.csv(blrsouth, gzfile = "a.csv")
write.csv(blrsouth, file = "a.R")
for (i in 1:10) {}
for (i in 1:10) {print(i)}
for (i in 1:10) {print(blrsouth[i])}
for (i in 1:3) {print(blrsouth[[i]])}
for (i in blrsouth) {print(i)}
sd(blrsouth[3])
sd(blrsouth[3,])
f <- function(a, b = 0) {a^1.52}
f(3.25)
args(cat)
write.csv(blrsouth, file = "a.R")
source("a.R")
cube <- make.power(3)
cube(9)
ls(environment(cube))
ls(environment(make.power))
source("a.R")
f(3)
months
months(2014)
months(Sys.time())
Sys.time()
weeks(Sys.time())
week(Sys.time())
`0_Consolidated_Report` <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
a <- 1:10
lapply(a, mean)
a <- list(a = 1:10)
lapply(a, mean)
sapply(a, mean)
cr <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(cr)
apply(cr, 1, mean)
clear
apply(cr[5], 1, mean)
View(cr)
str(cr)
library(xml)
library(XML)
fileUrl <- "http://eciresults.nic.in/ConstituencywiseS1026.htm?ac=26"
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
install.packages("XML")
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
library(XML)
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "http://eciresults.nic.in/ConstituencywiseS1026.htm?ac=26"
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
doc
`0_Consolidated_Report` <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
cr <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(cr)
cr[[6]]
lapply(mean, cr[[6]])
lapply(mean, cr[[5]])
Group4Data <- read.csv("~/Documents/IIIT - B/3rd Semester/Data Analytics/project/Group4Data.csv")
View(Group4Data)
View(Group4Data)
NBtab
library(e1071)
index <- 1:nrow(Group4Data)
testindex <- sample(index, trunc(length(index)/3))
testrecords <- Group4Data[testindex,]
traindrecords <- Group4Data[-testindex,]
NBayes <- naiveBayes(traindrecords[,c(11, 12)],traindrecords[,17])
NBpred <- predict(NBayes , testrecords[,-17])
NBtab <- table(true = testrecords[,17], pred = NBpred)
NBtab
library(e1071)
index <- 1:nrow(Group4Data)
testindex <- sample(index, trunc(length(index)/3))
testrecords <- Group4Data[testindex,]
traindrecords <- Group4Data[-testindex,]
NBayes <- naiveBayes(traindrecords[,c(11, 12)],traindrecords[,29])
NBpred <- predict(NBayes , testrecords[,-29])
NBtab <- table(true = testrecords[,29], pred = NBpred)
NBtab
library(e1071)
index <- 1:nrow(Group4Data)
testindex <- sample(index, trunc(length(index)/3))
testrecords <- Group4Data[testindex,]
traindrecords <- Group4Data[-testindex,]
NBayes <- naiveBayes(traindrecords[,c(1, 4)],traindrecords[,29])
NBpred <- predict(NBayes , testrecords[,-29])
NBtab <- table(true = testrecords[,29], pred = NBpred)
NBtab
setwd("~/git/data_analytics")
pcaegdata <- read.csv("pcaegdata.csv", header=FALSE)
pcaegdata <- read.csv("data/pcaegdata.csv", header=FALSE)
pcaegdata <- read.csv("practice/data_set/pcaegdata.csv", header=FALSE)
View(pcaegdata)
pcadtnr <- pcaegdata
pcadtnr[, 1]
pcadtnr[, 1] <- pcaegdata[, 1]
mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
View(pcadtnr)
View(pcaegdata)
covmat <- cov(pcadtnr)
View(covmat)
covmat <- cov(pcaegdata)
covmat <- cov(pcadtnr)
eigen(covmat)
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
eig$vectors[, 1]
Z <- pcadtnr %*% eig1
Z <- pcadtnr%*%eig1
View(pcadtnr)
Z <- pcadtnr %*% eig1
class(pcadtnr)
class(pcadtnr)
class(eig1)
Z <- data.matrix(pcadtnr) %*% eig1
View(Z)
Z <- as.matrix(pcadtnr) %*% eig1
View(Z)
t(eig1)
h(t)
help(t)
X_rec <- Z %*% t(eig1)  # t is transpose
View(X_rec)
View(pcaegdata)
View(pcadtnr)
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
X_rec <- Z %*% t(eig1)  # t is transpose
View(pcadtnr)
View(X_rec)
View(pcaegdata)
View(X_rec)
par (mfrow=c(1,2))
plot(Z, main="2D plot of raw data", xlab)
xlab <- par (mfrow=c(1,2))
plot(Z, main="2D plot of raw data", xlab)
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
View(X_rec)
plot(pcadtnr, main="1D plot of reduced data")
plot(Z, main="2D plot of raw data")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
solve(eig)
solve(data.matrix(eig))
solve(eig$vectors)
solve(eig$vectors) %*% covmat
solve(eig$vectors) %*% covmat %*% eig$vectors
View(X_rec)
View(Z)
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
View(Z)
pcaegdata <- read.csv("practice/data_set/mydata.csv", header=FALSE)
pcadtnr <- pcaegdata
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
# Build covariance matrix
covmat <- cov(pcadtnr)
#Find the eigen vectors and eigen values
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
# projection in new dimension
# note: cannot multiply data.frame with vector, use as.matrix or data.matrix
# as.matrix won't convert to num, data.matrix does
class(pcadtnr)
class(eig1)
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
# Recovering the data
X_rec <- Z %*% t(eig1)  # t is transpose
# plotting raw and reduced data
par (mfrow=c(1,2))
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
pcaegdata <- read.csv("practice/data_set/mydata.csv", header=FALSE)
pcadtnr <- pcaegdata
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
covmat <- cov(pcadtnr)
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
X_rec <- Z %*% t(eig1)  # t is transpose
par (mfrow=c(1,2))
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
View(Z)
View(X_rec)
plot(pcaegdata, main="actual data")
plot(pcaegdata, main="Actual Data")
plot(Z, main="2D plot of raw data")
plot(pcaegdata, main="Actual Data")
par (mfrow=c(1,3))
plot(pcaegdata, main="Actual Data")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
pcaegdata <- read.csv("practice/data_set/pcaegdata.csv", header=FALSE)
pcadtnr <- pcaegdata
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
covmat <- cov(pcadtnr)
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
X_rec <- Z %*% t(eig1)  # t is transpose
par (mfrow=c(1,3))
plot(pcaegdata, main="Actual Data")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
help(prcomp)
prcomp(pcaegdata)
pcaegdata <- read.csv("practice/data_set/pcaegdata.csv", header=FALSE)
pcadtnr <- pcaegdata
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
covmat <- cov(pcadtnr)
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
X_rec <- Z %*% t(eig1)  # t is transpose
par (mfrow=c(1,4))
plot(pcaegdata, main="Actual Data")
plot(pcadtnr, main="Actual Data")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
pcaegdata <- read.csv("practice/data_set/mydata.csv", header=FALSE)
pcadtnr <- pcaegdata
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
covmat <- cov(pcadtnr)
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
X_rec <- Z %*% t(eig1)  # t is transpose
par (mfrow=c(1,4))
plot(pcaegdata, main="Actual Data")
plot(pcadtnr, main="Actual Data")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
par (mfrow=c(1,4))
plot(pcaegdata, main="Actual Data")
plot(pcadtnr, main="Actual Data - reduced")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
prcomp(pcaegdata)
prcomp(pcadtnr)
prcomp(pcaegdata)
help(prcomp)
plot(prcomp(pcaegdata))
par (mfrow=c(1,2))
prcomp(pcaegdata)
plot(prcomp(pcaegdata))
help(prcomp)
plot(prcomp(pcaegdata))
summary(prcomp(pcaegdata, scale = TRUE))
biplot(prcomp(pcaegdata, scale = TRUE))
summary(prcomp(pcaegdata, scale = TRUE))
biplot(prcomp(pcaegdata, scale = TRUE))
par (mfrow=c(1,4))
plot(pcaegdata, main="Actual Data")
plot(pcadtnr, main="Actual Data - reduced")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
cor(pcaegdata)
pcaegdata <- read.csv("practice/data_set/mydata.csv", header=FALSE)
pcadtnr <- pcaegdata
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
covmat <- cov(pcadtnr)
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
X_rec <- Z %*% t(eig1)  # t is transpose
par (mfrow=c(1,4))
plot(pcaegdata, main="Actual Data")
plot(pcadtnr, main="Actual Data - reduced")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
par (mfrow=c(1,2))
cor(pcaegdata)
# PCA, Correlation and Regression
pcaegdata <- read.csv("practice/data_set/pcaegdata.csv", header=FALSE)
# My own example
#pcaegdata <- read.csv("practice/data_set/mydata.csv", header=FALSE)
# copy
pcadtnr <- pcaegdata
# Normalize data
# Substract mean for each column & divide col by sd
pcadtnr[, 1] <- pcaegdata[, 1] - mean(pcaegdata[, 1])
pcadtnr[, 1] <- pcaegdata[, 1] / sd(pcaegdata[, 1])
pcadtnr[, 2] <- pcaegdata[, 2] - mean(pcaegdata[, 2])
pcadtnr[, 2] <- pcaegdata[, 2] / sd(pcaegdata[, 2])
# Build covariance matrix
covmat <- cov(pcadtnr)
#Find the eigen vectors and eigen values
eig <- eigen(covmat)
eig1 <- eig$vectors[, 1]
# projection in new dimension
# note: cannot multiply data.frame with vector, use as.matrix or data.matrix
# as.matrix won't convert to num, data.matrix does
class(pcadtnr)
class(eig1)
Z <- as.matrix(pcadtnr) %*% eig1 # or data.matrix(pcadtnr)
# Recovering the data
X_rec <- Z %*% t(eig1)  # t is transpose
# plotting raw and reduced data
par (mfrow=c(1,4))
plot(pcaegdata, main="Actual Data")
plot(pcadtnr, main="Actual Data - reduced")
plot(Z, main="2D plot of raw data")
plot(X_rec, main="1D plot of reduced data")
# using prcomp
par (mfrow=c(1,2))
help(prcomp)
prcomp(pcaegdata)
plot(prcomp(pcaegdata))
summary(prcomp(pcaegdata, scale = TRUE))
biplot(prcomp(pcaegdata, scale = TRUE))
# correlation
cor(pcaegdata)
data(winered)
winered <- read.csv(practice/data_set/winequality-red.csv", header=FALSE)
data(winered)
winered <- read.csv("practice/data_set/winequality-red.csv", header=FALSE)
data(winered)
winered <- read.csv("practice/data_set/winequality-red.csv", header=FALSE)
data(winered)
View(winered)
winered <- read.csv("practice/data_set/winequality-red.csv", header=TRUE)
data(winered)
View(winered)
winered <- read.csv("practice/data_set/winequality-red.csv", header=TRUE)
View(winered)
winered <- read.csv("~/git/data_analytics/practice/data_set/winequality-red.csv", sep=";")
View(winered)
winered <- read.csv("practice/data_set/winequality-red.csv", sep=";")
data(winered)
View(winered)
summary(winered)
winefit <- lm(quality~fixedacidity+volatileacidity+ citricacid+residualsugar+chlorides+freesulfurdioxide + totalsulfurdioxide +density+pH+sulphates+alcohol,data=winered)
View(winered)
winefit <- lm(quality~fixed.acidity+volatile.acidity+ citric.acid+residual.sugar+chlorides+free.sulfur.dioxide + total.sulfur.dioxide +density+pH+sulphates+alcohol,data=winered)
Summary(winefit)
summary(winefit)
help(lm)
summary(winefit)
