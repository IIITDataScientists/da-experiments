pwd
help
graph
graphs
x <- 911
print(x)
x <- 911L
print(x)
x.class
x
x <- 2:12
x
x <- c(.5, 0.6)
x
x <- c(5L, 0.6)
x
x <- a:f
x <- vector("string", 10)
x <- vector("integer", 10)
x
x <- vector("numeric", 10)
x
y <- c(1.7, "a")
y
y <- c(1.7, TRUE)
y
x <- 0:6
asLogical(x)
as.logical(x)
z <- as.logical(x)
z
z <- as.complex(x)
z
m <- matrix(nrow = 2, ncol = 4)
m
attributes(x)
attributes(m)
m <- matrix(2, 4, 5, 6, 7, 8, 9, 0, nrow = 2, ncol = 4)
m <- matrix(2, 4, 5, nrow = 2, ncol = 4)
m <- matrix(z, nrow = 2, ncol = 4)
z <- 0:8
m <- matrix(z, nrow = 2, ncol = 4)
z <- 0:7
m <- matrix(z, nrow = 2, ncol = 4)
m
dim(z) <- c(2,4)
z
x <- 2:12
y <- 5:15
z <- cbind(x, y)
z
z <- rbind(x, y)
z
z <- list(5L, "Lol", TRUE, 9.11)
z
z[1]
z[[1]]
z[[[1]]
z[[[1]]]
z[[1]]
x <- factor(c(2, 3, 2, 4, 2, 2))
x
table(x)
unclass(x)
x <- factor(c(2, 3, 2, 4, 2, 2), levels =  c(2, 3, 4))
x
x <- factor(c(2, 3, 2, 4, 2, 2), levels =  c(2, 3))
x
table(x)
x <- factor(c(2, 3, 2, 4, 2, 2), levels =  c(4, 2, 3))
unclass(x)
x <- data.frame(foo = 1:4, bar = (T, T, F, F))
x <- data.frame(foo = 1:4, bar = (TRUE, TRUE, FALSE, FALSE))
x <- data.frame(foo = 1:4, bar = c(TRUE, TRUE, FALSE, FALSE))
x
read.csv()
pwd
Andhra.Pradesh...Adilabad <- read.csv("~/program/GeneralElections2014Analysis/DataCollection/Andhra Pradesh - Adilabad.csv")
View(Andhra.Pradesh...Adilabad)
View(Andhra.Pradesh...Adilabad)
View(Andhra.Pradesh...Adilabad)
View(Andhra.Pradesh...Adilabad)
blrsouth <- read.csv("~/program/GeneralElections2014Analysis/DataCollection/Karnataka - Bangalore South.csv")
View(blrsouth)
names(blrsouth)
names(blrsouth) <- (1, 2, 3)
names(blrsouth) <- c(1, 2, 3)
blrsouth
clear
clear()
View(blrsouth)
blrsouth[1]
blrsouth[[1]
;
blrsouth[[1]]
blrsouth[1][3]
blrsouth[1][1]
blrsouth[1][2]
blrsouth[1:2]
blrsouth[1,2]
blrsouth[1,3]
blrsouth[2,3]
blrsouth[1,4]
blrsouth[1,1]
blrsouth[5,1]
levels(blrsouth)
blrsouth[5, , ]
blrsouth[5, , drop = FALSE]
blrsouth
blrsouth[5, , drop = FALSE]
m <- blrsouth[5, , drop = FALSE]
m
m[1,]
m[1]
x <- list(a = 1:2, b = 2:5)
x
x[1]
x[[1]]
x$foo
x$a
x$b
x[c(1, 2)]
View(blrsouth)
winner <- complete.cases(blrsouth)
winner
blrsouth[winner, ]
blrsouth[winner, ][1:5, ]
blrsouth[1:5, ]
blrsouth[1:5, ][winner, ]
blrsouth[1:5, ]
write.table(blrsouth)
write.csv(blrsouth)
classes <- sapply(blrsouth, class)
classes
dput(blrsouth)
dput(blrsouth, file = "a.R")
write.csv(blrsouth, file = "a.csv")
rm(classes)
rm(x, y, z)
write.csv(blrsouth, gzfile = "a.csv")
write.csv(blrsouth, file = "a.R")
for (i in 1:10) {}
for (i in 1:10) {print(i)}
for (i in 1:10) {print(blrsouth[i])}
for (i in 1:3) {print(blrsouth[[i]])}
for (i in blrsouth) {print(i)}
sd(blrsouth[3])
sd(blrsouth[3,])
f <- function(a, b = 0) {a^1.52}
f(3.25)
args(cat)
write.csv(blrsouth, file = "a.R")
source("a.R")
cube <- make.power(3)
cube(9)
ls(environment(cube))
ls(environment(make.power))
source("a.R")
f(3)
months
months(2014)
months(Sys.time())
Sys.time()
weeks(Sys.time())
week(Sys.time())
`0_Consolidated_Report` <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
a <- 1:10
lapply(a, mean)
a <- list(a = 1:10)
lapply(a, mean)
sapply(a, mean)
cr <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(cr)
apply(cr, 1, mean)
clear
apply(cr[5], 1, mean)
View(cr)
str(cr)
library(xml)
library(XML)
fileUrl <- "http://eciresults.nic.in/ConstituencywiseS1026.htm?ac=26"
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
install.packages("XML")
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
library(XML)
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "http://eciresults.nic.in/ConstituencywiseS1026.htm?ac=26"
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
doc
`0_Consolidated_Report` <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
View(`0_Consolidated_Report`)
cr <- read.csv("~/0_Consolidated_Report.csv", header=F, quote="")
View(cr)
cr[[6]]
lapply(mean, cr[[6]])
lapply(mean, cr[[5]])
Group4Data <- read.csv("~/Documents/IIIT - B/3rd Semester/Data Analytics/project/Group4Data.csv")
View(Group4Data)
View(Group4Data)
NBtab
library(e1071)
index <- 1:nrow(Group4Data)
testindex <- sample(index, trunc(length(index)/3))
testrecords <- Group4Data[testindex,]
traindrecords <- Group4Data[-testindex,]
NBayes <- naiveBayes(traindrecords[,c(11, 12)],traindrecords[,17])
NBpred <- predict(NBayes , testrecords[,-17])
NBtab <- table(true = testrecords[,17], pred = NBpred)
NBtab
library(e1071)
index <- 1:nrow(Group4Data)
testindex <- sample(index, trunc(length(index)/3))
testrecords <- Group4Data[testindex,]
traindrecords <- Group4Data[-testindex,]
NBayes <- naiveBayes(traindrecords[,c(11, 12)],traindrecords[,29])
NBpred <- predict(NBayes , testrecords[,-29])
NBtab <- table(true = testrecords[,29], pred = NBpred)
NBtab
library(e1071)
index <- 1:nrow(Group4Data)
testindex <- sample(index, trunc(length(index)/3))
testrecords <- Group4Data[testindex,]
traindrecords <- Group4Data[-testindex,]
NBayes <- naiveBayes(traindrecords[,c(1, 4)],traindrecords[,29])
NBpred <- predict(NBayes , testrecords[,-29])
NBtab <- table(true = testrecords[,29], pred = NBpred)
NBtab
setwd("~/git/data_analytics")
sslc <- read.csv("data/Group4Data.csv")
sslc.subset <- subset(sslc,
select=c("REG_NO", "L1_MARKS", "L2_MARKS", "L3_MARKS",
"S1_MARKS", "S2_MARKS", "S3_MARKS", "TOTAL_MARKS", "NRC_CLASS"))
source("experiments/utils.R")
sslc.subset <- data.frame(sslc.subset[1],
lapply(sslc.subset[2:8], nonNumericCharactersRemover),
sslc.subset[9])
# eliminate the unwanted rows
sslc.subset <- subset(sslc.subset, subset=(L1_MARKS <= 125 & L2_MARKS <= 100 & L3_MARKS <= 100 &
S1_MARKS <= 100 & S2_MARKS <= 100 & S3_MARKS <= 100 & TOTAL_MARKS <= 625))
sslc <- read.csv("data/Group4Data.csv")
# select the 8 columns that we are interested in
sslc.subset <- subset(sslc,
select=c("L1_MARKS", "L2_MARKS", "L3_MARKS",
"S1_MARKS", "S2_MARKS", "S3_MARKS", "TOTAL_MARKS",
"NRC_CLASS", "SCHOOL_TYPE", "URBAN_RURAL", "NRC_CASTE_CODE", "NRC_GENDER_CODE",
"NRC_MEDIUM", "NRC_PHYSICAL_CONDITION", "CANDIDATE_TYPE",
"L1_RESULT", "L2_RESULT", "L3_RESULT",
"S1_RESULT", "S2_RESULT", "S3_RESULT"))
source("experiments/utils.R")
sslc.subset <- data.frame(lapply(sslc.subset[1:7], nonNumericCharactersRemover),
sslc.subset[8:21])
# eliminate the unwanted rows
sslc.subset <- subset(sslc.subset, subset=(L1_MARKS <= 125 & L2_MARKS <= 100 & L3_MARKS <= 100 &
S1_MARKS <= 100 & S2_MARKS <= 100 & S3_MARKS <= 100 & TOTAL_MARKS <= 625))
source("experiments/factoriser.R")
View(sslc.subset)
summary(sslc.subset$SCHOOL_TYPE)
summary(sslc.subset$NRC_CLASS)
summary(sslc.subset$NRC_CLASS)
summary(sslc.subset)
prop.table(sslc.subset)
prop.table(sslc.subset$SCHOOL_TYPE)
prop.table(sslc.subset$SCHOOL_TYPE, 1)
prop.table(sslc.subset, 5)
summary(sslc.subset)
summary(sslc.subset)$NRC_MEDIUM
a <- summary(sslc.subset)
a[1]
a[, 1]
a[, 21]
summary(sslc.subset)
props.table(class) * 100
table(sslc.subset$NRC_CLASS) -> class
props.table(class) * 100
prop.table(class) * 100
table(sslc.subset$SCHOOL_TYPE) -> st
prop.table(st) * 100
table(sslc.subset$URBAN_RURAL) -> ur
prop.table(ur) * 100
table(sslc.subset$NRC_CASTE_CODE) -> ncc
prop.table(ncc) * 100
table(sslc.subset$NRC_GENDER_CODE) -> ngc
prop.table(ngc) * 100
table(sslc.subset$NRC_MEDIUM) -> nm
prop.table(nm) * 100
table(sslc.subset$NRC_PHYSICAL_CONDITION) -> npc
prop.table(npc) * 100
table(sslc.subset$CANDIDATE_TYPE) -> ct
prop.table(ct) * 100
table(sslc.subset$L1_CLASS) -> l1c
prop.table(l1c) * 100
prop.table(l1c) * 100
table(sslc.subset$L1_CLASS) -> l1c
prop.table(l1c) * 100
table(sslc.subset$L1_RESULT) -> l1c
prop.table(l1c) * 100
table(sslc.subset$L2_RESULT) -> l2c
prop.table(l2c) * 100
table(sslc.subset$L3_RESULT) -> l3c
prop.table(l3c) * 100
table(sslc.subset$S1_RESULT) -> s1c
prop.table(s1c) * 100
table(sslc.subset$L2_RESULT) -> s2c
prop.table(s2c) * 100
table(sslc.subset$S2_RESULT) -> s2c
prop.table(s2c) * 100
table(sslc.subset$S3_RESULT) -> s3c
prop.table(s3c) * 100
